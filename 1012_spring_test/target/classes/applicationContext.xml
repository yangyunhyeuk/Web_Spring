<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<context:component-scan base-package="model"></context:component-scan>
	<context:component-scan base-package="com.yang.app"></context:component-scan>

<!-- 트랜잭션 매니저를 다음과 같이 등록하여 사용해준다. -->
<!-- 다음의 클래스에서 인터페이스가 구현되어 있다. -->
<!-- 트랜잭션 추가를 위해서 참조할 데이터 소스를 29번째줄과 같이 작성해줘야 사용이 가능하다. -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
   </bean>

	<!-- 어떤 애(id)를 어떤 트랜잭션 매니저로 사용할 것인지 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 어떤 메서드에 대해서 어떻게 등록할지 다음에서 정의한다.-->
			<!-- get이 들어가는 핵심관심에 읽기만 하고 그 외 핵심관심에 트랜잭션을 적용해라, get은 보기만 할 쁀, 데이터 변동이 없기 때문-->
			<!-- read-only="true" : read-only속성은 읽기 전용으로 처리해주세요 트랜잭션 관리대상에서 제외시킨다는 의미이다.-->
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>


<!-- jdbcTemplate 객체 자체를 다음과 같이 사용한다.  -->
<!-- 주입을 위해 다음의 데이터 소스를 명시해준다.  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="yang"></property>
		<property name="password" value="1234"></property>
	</bean>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 기존 aop는 어노테이션으로 설정하였는데 트랜잭션의 경우 직접 설정해주어야한다. -->
	<aop:config>
	<!-- get이 포함된 메서드는 readonly 설정을 해두었기에, 상관없다 -->
		<aop:pointcut expression="execution(* model..*Impl.*(..))" id="tPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="tPointcut"/>
	</aop:config>





</beans>
